<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.FXbhBMapper">
  <resultMap id="BaseResultMap" type="com.example.domain.FXbhB">
    <id column="ADDVCD" jdbcType="VARCHAR" property="addvcd" />
    <id column="XBH" jdbcType="VARCHAR" property="xbh" />
    <id column="COUNT_YEAR" jdbcType="CHAR" property="countYear" />
    <result column="ADDVNM" jdbcType="VARCHAR" property="addvnm" />
    <result column="AREA" jdbcType="DECIMAL" property="area" />
    <result column="STCD" jdbcType="VARCHAR" property="stcd" />
    <result column="USE_TYPE" jdbcType="CHAR" property="useType" />
    <result column="FOR_OWN" jdbcType="CHAR" property="forOwn" />
    <result column="FOR_USE" jdbcType="CHAR" property="forUse" />
    <result column="TREE_OWN" jdbcType="CHAR" property="treeOwn" />
    <result column="TREE_USE" jdbcType="CHAR" property="treeUse" />
    <result column="TREE_OWNER" jdbcType="VARCHAR" property="treeOwner" />
    <result column="FOUND_YEAR" jdbcType="CHAR" property="foundYear" />
    <result column="MODTM" jdbcType="TIMESTAMP" property="modtm" />
    <result column="TREE_AGE" jdbcType="DECIMAL" property="treeAge" />
    <result column="AGE_GROUP" jdbcType="CHAR" property="ageGroup" />
    <result column="CREATETM" jdbcType="TIMESTAMP" property="createtm" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ADDVCD, XBH, COUNT_YEAR, ADDVNM, AREA, STCD, USE_TYPE, FOR_OWN, FOR_USE, TREE_OWN, 
    TREE_USE, TREE_OWNER, FOUND_YEAR, MODTM, TREE_AGE, AGE_GROUP, CREATETM
  </sql>
  <select id="selectByExample" parameterType="com.example.domain.FXbhBExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from F_XBH_B
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.example.domain.FXbhBKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from F_XBH_B
    where ADDVCD = #{addvcd,jdbcType=VARCHAR}
      and XBH = #{xbh,jdbcType=VARCHAR}
      and COUNT_YEAR = #{countYear,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.domain.FXbhBKey">
    delete from F_XBH_B
    where ADDVCD = #{addvcd,jdbcType=VARCHAR}
      and XBH = #{xbh,jdbcType=VARCHAR}
      and COUNT_YEAR = #{countYear,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.domain.FXbhBExample">
    delete from F_XBH_B
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.domain.FXbhB">
    insert into F_XBH_B (ADDVCD, XBH, COUNT_YEAR, 
      ADDVNM, AREA, STCD, 
      USE_TYPE, FOR_OWN, FOR_USE, TREE_OWN, 
      TREE_USE, TREE_OWNER, FOUND_YEAR, 
      MODTM, TREE_AGE, AGE_GROUP, 
      CREATETM)
    values (#{addvcd,jdbcType=VARCHAR}, #{xbh,jdbcType=VARCHAR}, #{countYear,jdbcType=CHAR}, 
      #{addvnm,jdbcType=VARCHAR}, #{area,jdbcType=DECIMAL}, #{stcd,jdbcType=VARCHAR}, 
      #{useType,jdbcType=CHAR}, #{forOwn,jdbcType=CHAR}, #{forUse,jdbcType=CHAR}, #{treeOwn,jdbcType=CHAR}, 
      #{treeUse,jdbcType=CHAR}, #{treeOwner,jdbcType=VARCHAR}, #{foundYear,jdbcType=CHAR}, 
      #{modtm,jdbcType=TIMESTAMP}, #{treeAge,jdbcType=DECIMAL}, #{ageGroup,jdbcType=CHAR}, 
      #{createtm,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.domain.FXbhB">
    insert into F_XBH_B
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="addvcd != null">
        ADDVCD,
      </if>
      <if test="xbh != null">
        XBH,
      </if>
      <if test="countYear != null">
        COUNT_YEAR,
      </if>
      <if test="addvnm != null">
        ADDVNM,
      </if>
      <if test="area != null">
        AREA,
      </if>
      <if test="stcd != null">
        STCD,
      </if>
      <if test="useType != null">
        USE_TYPE,
      </if>
      <if test="forOwn != null">
        FOR_OWN,
      </if>
      <if test="forUse != null">
        FOR_USE,
      </if>
      <if test="treeOwn != null">
        TREE_OWN,
      </if>
      <if test="treeUse != null">
        TREE_USE,
      </if>
      <if test="treeOwner != null">
        TREE_OWNER,
      </if>
      <if test="foundYear != null">
        FOUND_YEAR,
      </if>
      <if test="modtm != null">
        MODTM,
      </if>
      <if test="treeAge != null">
        TREE_AGE,
      </if>
      <if test="ageGroup != null">
        AGE_GROUP,
      </if>
      <if test="createtm != null">
        CREATETM,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="addvcd != null">
        #{addvcd,jdbcType=VARCHAR},
      </if>
      <if test="xbh != null">
        #{xbh,jdbcType=VARCHAR},
      </if>
      <if test="countYear != null">
        #{countYear,jdbcType=CHAR},
      </if>
      <if test="addvnm != null">
        #{addvnm,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=DECIMAL},
      </if>
      <if test="stcd != null">
        #{stcd,jdbcType=VARCHAR},
      </if>
      <if test="useType != null">
        #{useType,jdbcType=CHAR},
      </if>
      <if test="forOwn != null">
        #{forOwn,jdbcType=CHAR},
      </if>
      <if test="forUse != null">
        #{forUse,jdbcType=CHAR},
      </if>
      <if test="treeOwn != null">
        #{treeOwn,jdbcType=CHAR},
      </if>
      <if test="treeUse != null">
        #{treeUse,jdbcType=CHAR},
      </if>
      <if test="treeOwner != null">
        #{treeOwner,jdbcType=VARCHAR},
      </if>
      <if test="foundYear != null">
        #{foundYear,jdbcType=CHAR},
      </if>
      <if test="modtm != null">
        #{modtm,jdbcType=TIMESTAMP},
      </if>
      <if test="treeAge != null">
        #{treeAge,jdbcType=DECIMAL},
      </if>
      <if test="ageGroup != null">
        #{ageGroup,jdbcType=CHAR},
      </if>
      <if test="createtm != null">
        #{createtm,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.domain.FXbhBExample" resultType="java.lang.Long">
    select count(*) from F_XBH_B
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update F_XBH_B
    <set>
      <if test="record.addvcd != null">
        ADDVCD = #{record.addvcd,jdbcType=VARCHAR},
      </if>
      <if test="record.xbh != null">
        XBH = #{record.xbh,jdbcType=VARCHAR},
      </if>
      <if test="record.countYear != null">
        COUNT_YEAR = #{record.countYear,jdbcType=CHAR},
      </if>
      <if test="record.addvnm != null">
        ADDVNM = #{record.addvnm,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        AREA = #{record.area,jdbcType=DECIMAL},
      </if>
      <if test="record.stcd != null">
        STCD = #{record.stcd,jdbcType=VARCHAR},
      </if>
      <if test="record.useType != null">
        USE_TYPE = #{record.useType,jdbcType=CHAR},
      </if>
      <if test="record.forOwn != null">
        FOR_OWN = #{record.forOwn,jdbcType=CHAR},
      </if>
      <if test="record.forUse != null">
        FOR_USE = #{record.forUse,jdbcType=CHAR},
      </if>
      <if test="record.treeOwn != null">
        TREE_OWN = #{record.treeOwn,jdbcType=CHAR},
      </if>
      <if test="record.treeUse != null">
        TREE_USE = #{record.treeUse,jdbcType=CHAR},
      </if>
      <if test="record.treeOwner != null">
        TREE_OWNER = #{record.treeOwner,jdbcType=VARCHAR},
      </if>
      <if test="record.foundYear != null">
        FOUND_YEAR = #{record.foundYear,jdbcType=CHAR},
      </if>
      <if test="record.modtm != null">
        MODTM = #{record.modtm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.treeAge != null">
        TREE_AGE = #{record.treeAge,jdbcType=DECIMAL},
      </if>
      <if test="record.ageGroup != null">
        AGE_GROUP = #{record.ageGroup,jdbcType=CHAR},
      </if>
      <if test="record.createtm != null">
        CREATETM = #{record.createtm,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update F_XBH_B
    set ADDVCD = #{record.addvcd,jdbcType=VARCHAR},
      XBH = #{record.xbh,jdbcType=VARCHAR},
      COUNT_YEAR = #{record.countYear,jdbcType=CHAR},
      ADDVNM = #{record.addvnm,jdbcType=VARCHAR},
      AREA = #{record.area,jdbcType=DECIMAL},
      STCD = #{record.stcd,jdbcType=VARCHAR},
      USE_TYPE = #{record.useType,jdbcType=CHAR},
      FOR_OWN = #{record.forOwn,jdbcType=CHAR},
      FOR_USE = #{record.forUse,jdbcType=CHAR},
      TREE_OWN = #{record.treeOwn,jdbcType=CHAR},
      TREE_USE = #{record.treeUse,jdbcType=CHAR},
      TREE_OWNER = #{record.treeOwner,jdbcType=VARCHAR},
      FOUND_YEAR = #{record.foundYear,jdbcType=CHAR},
      MODTM = #{record.modtm,jdbcType=TIMESTAMP},
      TREE_AGE = #{record.treeAge,jdbcType=DECIMAL},
      AGE_GROUP = #{record.ageGroup,jdbcType=CHAR},
      CREATETM = #{record.createtm,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.domain.FXbhB">
    update F_XBH_B
    <set>
      <if test="addvnm != null">
        ADDVNM = #{addvnm,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        AREA = #{area,jdbcType=DECIMAL},
      </if>
      <if test="stcd != null">
        STCD = #{stcd,jdbcType=VARCHAR},
      </if>
      <if test="useType != null">
        USE_TYPE = #{useType,jdbcType=CHAR},
      </if>
      <if test="forOwn != null">
        FOR_OWN = #{forOwn,jdbcType=CHAR},
      </if>
      <if test="forUse != null">
        FOR_USE = #{forUse,jdbcType=CHAR},
      </if>
      <if test="treeOwn != null">
        TREE_OWN = #{treeOwn,jdbcType=CHAR},
      </if>
      <if test="treeUse != null">
        TREE_USE = #{treeUse,jdbcType=CHAR},
      </if>
      <if test="treeOwner != null">
        TREE_OWNER = #{treeOwner,jdbcType=VARCHAR},
      </if>
      <if test="foundYear != null">
        FOUND_YEAR = #{foundYear,jdbcType=CHAR},
      </if>
      <if test="modtm != null">
        MODTM = #{modtm,jdbcType=TIMESTAMP},
      </if>
      <if test="treeAge != null">
        TREE_AGE = #{treeAge,jdbcType=DECIMAL},
      </if>
      <if test="ageGroup != null">
        AGE_GROUP = #{ageGroup,jdbcType=CHAR},
      </if>
      <if test="createtm != null">
        CREATETM = #{createtm,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ADDVCD = #{addvcd,jdbcType=VARCHAR}
      and XBH = #{xbh,jdbcType=VARCHAR}
      and COUNT_YEAR = #{countYear,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.domain.FXbhB">
    update F_XBH_B
    set ADDVNM = #{addvnm,jdbcType=VARCHAR},
      AREA = #{area,jdbcType=DECIMAL},
      STCD = #{stcd,jdbcType=VARCHAR},
      USE_TYPE = #{useType,jdbcType=CHAR},
      FOR_OWN = #{forOwn,jdbcType=CHAR},
      FOR_USE = #{forUse,jdbcType=CHAR},
      TREE_OWN = #{treeOwn,jdbcType=CHAR},
      TREE_USE = #{treeUse,jdbcType=CHAR},
      TREE_OWNER = #{treeOwner,jdbcType=VARCHAR},
      FOUND_YEAR = #{foundYear,jdbcType=CHAR},
      MODTM = #{modtm,jdbcType=TIMESTAMP},
      TREE_AGE = #{treeAge,jdbcType=DECIMAL},
      AGE_GROUP = #{ageGroup,jdbcType=CHAR},
      CREATETM = #{createtm,jdbcType=TIMESTAMP}
    where ADDVCD = #{addvcd,jdbcType=VARCHAR}
      and XBH = #{xbh,jdbcType=VARCHAR}
      and COUNT_YEAR = #{countYear,jdbcType=CHAR}
  </update>
</mapper>